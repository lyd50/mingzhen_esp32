#include "EdpKit.h"
#include "hz.c"
#include <ArduinoOTA.h>
#include <stdlib.h>
#include <OneWire.h>
#include <DallasTemperature.h>
#include <Arduino.h>
#include <HardwareSerial.h>
#include <WiFi.h>
#include <WiFiClient.h>
#include <WebServer.h>
#include <ESPmDNS.h>

#include <Update.h>
#include "EEPROM.h"
#include <WiFiUdp.h>

/*------------------------------------------------------wifi------------------------------------------------ */

//const char *ssid = "";
//const char *password = "";
String former_wifi_ssid = "", wifi_ssid = "lydwifi", former_wifi_pass = "", wifi_pass = "19711128";
//bool you_fangwen=false;
int wifi_disconnect_count = 0, edp_disconnect_count = 0;
/* ---------------------------------------edp-----------------------------------------*/
bool wifi_connected = false;
unsigned int version = 20181128;
bool chxu_update = false;
const char *edp_server = "jjfaedp.hedevice.com";
unsigned int edp_port = 876;
bool edpConnected = false;
const char *apikey = "29R0uDMDtEHy9=HDEj17uO4Xx0U=", *device_id = "505210713";
unsigned char edp_buffer[200];	//???????
unsigned long xintiao_jiange = 0; //???????????
unsigned long guanbi_dingshi;	 //???????????????????????
WiFiClient edp_client;			  //
EdpPacketClass edp;				  //????EDP????
unsigned char packettype;

/*--------------------------------显示屏串口-------------------------------------------*/
byte buffer[200]; //??????????
unsigned int buffer_index = 0;
byte brightness = 30; //???????50
bool set_once = true; //???????????
byte page = 0;		  //???0?????
byte pre_page = 50;   //???????????锟斤拷???????
String pre_kongjian, pre_text;
//byte ff_starter = 0;
byte terminator = 0; //?????????
bool parse_ready = false;
bool eeprom_write = false;
bool xsp_shezhi = false;
String order_sended = ""; //?????锟斤拷????????
//unsigned long main_1 = 0;
//unsigned long page_transfer = 0;
//unsigned long tips = 0;
//unsigned long loop_refresh;

/*--------------------------------EEPROM-------------------------------------------*/
//0-49??????锟斤拷?? 50-99??????锟斤拷?  100-149?????锟斤拷? 150???????
#define EEPROM_SIZE 200

/*--------------------------------制水-------------------------------------------*/
bool guanbi = false;			  //远程控制 true关机 false运行
byte zhishuishijian_set = 50;	 //?????????50?????255????
unsigned long zhishuizongshijian; //
byte zhishui_zong_add = 5;
byte zhishui_dan_add = 30;

bool yinyong_zhishui = false, shchan_zhishui = false;
byte shuimandengdaishijian_set = 6; //??????????????????? 6?????

byte zhishui_maichong_biaozhun = 30;

byte chaoshi_cishu = 0; /*????2?锟斤拷???????????*/
byte feishuiguoshao_times = 0;
unsigned long zhishui_starttime = 0, zhishui_endtime = 0;

/*--------------------------------洗膜-------------------------------------------*/
byte jingshuiximo_shichang = 6; //?????6????,??锟斤拷????
bool xuyao_ximo = false;
byte moci_ximo_maichong_biaozhun = 9, ximo_shuiliu_jiance_cishu = 10;
//byte dcf_chxi_shichang = 40; //??????????????
unsigned long ximo_begin = 0;
/*--------------------------------超滤-------------------------------------------*/
byte chaolv_chongxi_maichong_dixian = 20;
byte loushui_maich_biaozhun = 10;
//unsigned int chaolvchongxi_zongcishu = 0; /*??????????*/
unsigned long accumulative = 0; /*?????????*/
byte chxi_cishu = 2;			//?????????????
byte leiji_biaozhun = 30;
bool chaolv_chxi = false, loushui_bool = false; //?????????????
unsigned long chaolvchongxi_zongcishu = 0;
/*--------------------------------缺水-------------------------------------------*/
bool queshui_once = false;
unsigned long queshui_begin = 0;
/*--------------------------------报警-------------------------------------------*/
String state = ""; //??????
unsigned long alarm_jiange = 0;
bool jingshui_chaoya = false, feishuiguoshao = false, alarm1 = false;
/*--------------------------------调试-------------------------------------------*/
bool tiaoshikg = true;
/*--------------------------------?????????-------------------------------------------*/
volatile long count = 0; //????????????????

unsigned long begintime = 0, endtime, begintime2 = 0, endtime2;
unsigned long begintime_baohu = 0, endtime_baohu = 0;

char str[10];
/*--------------------------------温度-------------------------------------------*/
OneWire oneWire(18); //????
DallasTemperature sensors(&oneWire);
DeviceAddress address_18b20;
//bool 18b20_ok?=false;
float tempC;
unsigned long begintime_wendu = 0;
/*--------------------------------????-------------------------------------------*/
unsigned long jingshui_chaoya_begin = 0;
/*--------------------------------????????趨-18?????????------------------------------------------*/
int diyakg = 23, ximo_gaoyakg = 22, yinyong_gaoyakg = 21, shengchan_gaoyakg = 19, jingshui_chaoyakg = 5, shuiliu_chuanganqi = 14;
int chaolv = 27, jingshui = 26, zongjin = 25, gaoyabeng = 33, youxian = 32, jiare = 35;

const int maxAllowedWrites = 80;
/*-------------????buffer, ????buffer, EDP????????-------------------------*/

void rcvDebug(unsigned char *rcv, int len)
{
	int i;

	Serial.print("edp接收的数据");
	Serial.println(len, DEC);
	for (i = 0; i < len; i++)
	{
		Serial.print(rcv[i], 10);
		Serial.print(" ");
	}
	Serial.println("");
}

void edp_reponse(int response_type)
{
	//ESP.wdtFeed();

	unsigned long time = millis() + 4000;
	while (!edp_client.available() && millis() < time)
		;

	int byte_count = edp_client.available();
	//memset(buffer, 0, 200);
	if (byte_count > 0) //??????
	{
		//buffer=   client.readBytesUntil('\r')
		for (int e = 0; e < byte_count; e++)
		{ //edp.UnpackConnectResp=edp_client.read();
			edp_buffer[e] = edp_client.read();
		}
		rcvDebug(edp_buffer, byte_count);
		//tiaoshi("??????????"+ edp.UnpackConnectResp(edp_buffer)) ;
		switch (response_type)
		{ //?趨????????

		case 1:

			//Serial.println("edp???????");
			//0x20 0x02 0x0 0x0

			if (edp_buffer[0] == 0x20 && edp_buffer[2] == 0x00 && edp_buffer[3] == 0x00)
			{
				Serial.println("EDP连接成功");
				edpConnected = true;
				edp_disconnect_count = 0;
				//f_zhuang_tai("EDP ??????");
				//edp_upload_string("wifi", "wifi??????????");
			}

			else
			{
				//edp_upload_string("edp????", "???????????????????????????");//??????????????????????????

				edpConnected = false;
				edp_disconnect_count++; //????????????1
				//f_zhuang_tai("edp ????????????????????");

				//log_write("edp ????????????????????");//??????
				Serial.println("有数据，但数据不对，EDP连接失败");
			}

			break;
			//????????2????? 208 0 ?? 0xD0 0
		case 2:
			//Serial.println("edp ???????");

			if (edp_buffer[0] == B11010000 && edp_buffer[1] == B00000000)
			{
				edpConnected = true;
				edp_disconnect_count = 0; //??????????
				//edp_upload_string("????", "???????????????????????");//
				Serial.println("EDP请求心跳成功");
				//f_zhuang_tai("???????????????????????");
			}
			else
			{
				//??????????????????????????????????????????????????????????????
				//edp_upload_string("????", "?????????????????????");
				//f_zhuang_tai("??????????????????????????");
				edpConnected = false;   //????????????锟斤拷?
				edp_disconnect_count++; //????????????1
				Serial.println("EDP请求心跳返回有数据但数据错误");
			}
			break;
		}
	}

	else
	{
		Serial.println("没有接收到数据");
		edpConnected = false;
		edp_disconnect_count++; //edp????????????1
								//f_zhuang_tai("??锟斤拷????EDP??????????");
	}
}
void edp_packet_send()
{ // ???????????????锟斤拷??????? ??锟斤拷???????
	//client.flush();
	while (edp_client.available())
	{
		edp_client.read();
	} //????????????
	if (!edp_client.connected())
	{
		edp_client.connect(edp_server, edp_port);
		Serial.print("?????edp???????? ");
		Serial.println((String)edp_server);
	}
	if (edp_client.connected())
	{
		//Serial.println("edp????????????");

		edp_client.write(edp.GetData(), edp.GetWritepos());

		//Serial.println("edp?????????");
		//???????????????????????????????
		/*if (ji_qi_shi_yan == true)//??????
		{
			xintiao_jiange = millis() + 60000; //???1???????????.???????????
		}
		else//??????????
		{
			xintiao_jiange = millis() + 200000; //???5???????????.??????????
		}*/
		//client.flush();//????锟斤拷????锟斤拷?????????????????????????????
	}
	else
	{
		Serial.println("edp?????????????");
	}
}

void wifi_connecte(String ssid, String password)
{
	if (ssid != "") //锟斤拷锟斤拷锟斤拷WiFi锟斤拷锟斤拷锟斤拷为锟斤拷
	{
		//delay(10);
		// We start by connecting to a WiFi network
		Serial.println();
		Serial.print("锟斤拷锟斤拷锟斤拷...");
		Serial.println(ssid);
		if (wifi_pass != "") //锟斤拷要锟斤拷锟斤拷
		{

			WiFi.begin(ssid.c_str(), password.c_str());
		}
		else
		{
			WiFi.begin(ssid.c_str()); //锟斤拷锟斤拷要锟斤拷锟斤拷锟斤拷锟斤拷
		}

		for (int i7 = 0; i7 < 15; i7++) //锟筋长锟饺达拷15锟斤拷
		{
			//ESP.wdtFeed();//锟斤拷止锟斤拷锟斤拷wifi时锟斤拷锟斤拷锟斤拷锟斤拷锟??
			if (WiFi.status() != WL_CONNECTED)
			{
				delay(800);
				Serial.print(".");
			}
			else
			{
				wifi_connected = true;
				// wifi_ip = WiFi.localIP();

				Serial.println("");
				Serial.print("锟斤拷锟接碉拷锟斤拷");
				Serial.println(wifi_ssid);
				Serial.print("IP address: ");
				Serial.println(WiFi.localIP());
				//log_write("wifi锟斤拷锟接成癸拷");
				i7 = 20; //为锟斤拷锟斤拷锟斤拷锟斤拷WiFi锟斤拷锟斤拷锟剿筹拷循锟斤拷
			}
		}
	}
}

void edp_first_connect()
{
	if (!edp_client.connected())
	{
		edp_client.connect(edp_server, edp_port);
		Serial.print("锟斤拷锟接碉拷edp锟斤拷锟斤拷锟斤拷锟斤拷 ");
		Serial.println((String)edp_server);
	}
	if (edp_client.connected())
	{
		Serial.println("edp锟斤拷锟斤拷锟斤拷锟斤拷锟接成癸拷");

		edp.PacketConnect1(device_id, apikey);
		edp_packet_send();
		edp.ClearParameter();

		// Serial.println("??????????????");
		edp_reponse(1);
	}
	else
	{
		Serial.println("edp锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷失锟斤拷");
	}
}

void closeall() /*?????????*/
{
	digitalWrite(chaolv, LOW);
	//digitalWrite(rushui, LOW);
	//digitalWrite(chongxi, LOW);
	digitalWrite(jingshui, LOW);
	digitalWrite(gaoyabeng, LOW);
	digitalWrite(zongjin, LOW);
	digitalWrite(youxian, LOW);
	//digitalWrite(jiare, LOW);
}
void count_function()
{
	count++;
	delay(3);
}
void detect(unsigned long yongshi) /*???????,??锟斤拷????*/
{
	count = 0; /*????????????,???????*/
	unsigned long begintime2 = millis();
	unsigned long endtime2;
	attachInterrupt(digitalPinToInterrupt(shuiliu_chuanganqi), count_function, FALLING);
	do
	{
		endtime2 = millis();
	} while (endtime2 - begintime2 < yongshi);

	detachInterrupt(digitalPinToInterrupt(shuiliu_chuanganqi));
}

void decide_chaolv_chxi(unsigned long long1)
{
	//zhishuizongshijian = zhishuizongshijian + long1;
	//EEPROM.writeLong(3, zhishuizongshijian);

	accumulative = accumulative + long1;

	if (accumulative > leiji_biaozhun * 60000)
	{
		chaolv_chxi = true;
		accumulative = 0;
	}
}

void xianshiping_sendorder1(String kongjian, int value) //?????????
{

	Serial2.print(kongjian + ".val=" + value + "");
	for (int i = 0; i < 3;)
	{
		Serial2.write(0xff);
		i++;
	};
}

void xianshiping_sendorder2(String kongjian, String text) //?????????
{
	if (page == 0)
	{
		Serial2.print(kongjian + ".txt=\"" + text + "\"");
		for (int i = 0; i < 3;)
		{
			Serial2.write(0xff);
			i++;
		}
		delay(1500);
	}
}

void tiaoshi(String pingmuxianshi)
{

	if (tiaoshikg == true)
	{

		Serial.println(pingmuxianshi);
	}
}

void check_wifi() //锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷
{
	if (WiFi.status() != WL_CONNECTED)
	{
		wifi_connecte(wifi_ssid, wifi_pass); //wifi 15锟斤拷锟斤拷锟斤拷
	}
	if ((WiFi.status() != WL_CONNECTED)) //15锟斤拷锟斤拷锟接猴拷没锟斤拷锟斤拷锟接成癸拷
	{
		xianshiping_sendorder2("zhuangtai", "wifi重连接不成功，等待下次");
		if (tiaoshikg == true) //锟斤拷锟斤拷状态
		{
			xintiao_jiange = millis() + 60000; //锟斤拷锟??1锟斤拷锟接凤拷锟斤拷锟斤拷锟斤拷.锟酵硷拷锟斤拷锟斤拷锟斤拷锟斤拷
		}
		else //锟斤拷锟斤拷锟斤拷锟斤拷状态
		{
			xintiao_jiange = millis() + 200000; //锟斤拷锟??200锟斤拷锟斤拷臃锟斤拷锟斤拷锟斤拷锟??.锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷
		}
		wifi_disconnect_count++;
		//log_write("wifi锟斤拷锟接诧拷锟缴癸拷锟斤拷锟饺达拷200锟斤拷锟斤拷麓锟斤拷锟斤拷锟??");
		tiaoshi("wifi重连接不成功，等待下次");
	}
	else //15锟轿猴拷WiFi锟斤拷锟斤拷锟斤拷锟剿伙拷wifi没锟叫断匡拷
	{

		wifi_disconnect_count = 0; //WiFi锟斤拷锟斤拷失锟杰达拷锟斤拷锟斤拷锟斤拷

		edp_first_connect();
		/*if (edpConnected == true) {
				edp_upload_string("wifi", "wifi锟斤拷锟斤拷锟斤拷锟接成癸拷");
				f_zhuang_tai("wifi锟斤拷锟斤拷锟斤拷锟接成癸拷");
				//log_write("wifi锟斤拷锟斤拷锟斤拷锟接成癸拷");
				Serial.println("wifi锟斤拷锟斤拷锟斤拷锟接成癸拷");

			}*/
	}
}
void edp_heartbeat()
{
	//ESP.wdtFeed();
	if (WiFi.status() == WL_CONNECTED) //wifi连接状态
	{

		edp.PacketPing(); //??? 192 0  0xC0 0
		if (tiaoshikg == true)
		{
			rcvDebug(edp.GetData(), edp.GetWritepos());
		}

		edp_packet_send();

		Serial.println("?????????????");

		//???????
		edp.ClearParameter();

		edp_reponse(2); //此函数里面确认edp是否连接
	}
	else
	{
		Serial.println("wifi断开了");
		check_wifi();
	}
}

void edp_upload_int(String data_stream_id, int datapoint) //锟较达拷WiFi锟脚猴拷强锟斤拷锟角革拷值
{
	if (edpConnected == true)
	{

		//ESP.wdtFeed();
		//Serial.println("锟较达拷锟斤拷一锟斤拷锟斤拷锟斤拷");
		String input = "{\"" + data_stream_id + "\":" + datapoint + "}\"";

		cJSON *cj = cJSON_Parse(input.c_str());

		edp.PacketSavedataJson("", cj, 3, 0);
		edp_packet_send();
		cJSON_Delete(cj); //锟斤拷锟斤拷锟缴撅拷锟斤拷锟絥odemcu锟斤拷锟斤拷锟斤拷
		while (edp_client.available())
		{
			edp_client.read();
		} //锟斤拷锟斤拷锟秸存储确锟斤拷
		edp.ClearParameter();
	}
}
void edp_upload_string(String data_stream_id, String datapoint)
{
	if (edpConnected == true)
	{

		//ESP.wdtFeed();
		//Serial.println("锟较达拷锟斤拷一锟斤拷锟街凤拷锟斤拷");

		String input = ",;";
		input += data_stream_id + ",";
		input += datapoint; //锟斤拷确锟斤拷式

		//EdpPacket*	edp = NewBuffer();

		edp.PacketSavedataSimpleString(device_id, input.c_str());
		edp_packet_send();
		while (edp_client.available())
		{
			edp_client.read();
		} //锟斤拷锟斤拷锟秸存储确锟斤拷

		//DeleteBuffer(&edp);
		edp.ClearParameter();
	}
}

void edp_command_parse() //约锟斤拷锟斤拷锟斤拷锟侥革拷锟斤拷锟斤拷,10锟斤拷锟斤拷前锟斤拷锟斤拷锟??前锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟酵ｏ拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷值锟斤拷锟斤拷锟斤拷锟斤拷
{
	int order_type = (int(buffer[44]) - 48) * 10; //Serial.println(order_type);
	order_type = order_type + (int(buffer[45]) - 48);
	int value;

	//Serial.println(value);
	switch (order_type)
	{
		/*------------------------------------锟斤拷锟斤拷停止锟斤拷锟斤拷锟斤拷?锟斤拷------------------------------------------*/
	case 1:								   //约锟斤拷锟斤拷压锟斤拷锟截非接地端匡拷锟狡ｏ拷
		value = int(buffer[46] - 48) * 10; //Serial.println(value);
		value = value + (int(buffer[47]) - 48);
		switch (value)
		{
		case 1: //锟斤拷压锟斤拷锟截接碉拷锟斤拷痈叩锟轿伙拷谢锟??  0101

			Serial.println("锟斤拷锟斤拷状态转锟斤拷");
			guanbi = !guanbi;   //要锟斤拷锟斤拷锟斤拷锟街碉拷锟戒。
			if (guanbi == true) //锟斤拷值时
			{
				//edp_upload_int("停锟斤拷", 1);

				EEPROM.writeBool(106, true); //106
				guanbi = true;
				//digitalWrite(D5, LOW);//锟斤拷压锟斤拷锟截接地ｏ拷锟斤拷锟斤拷锟斤拷锟斤拷
				edp_upload_string("命令结果", "命令值有效，已经切换");
				edp_upload_string("工作状态", "停机");
			}
			else
			{
				//digitalWrite(D5, HIGH);//锟斤拷压锟斤拷锟截接高碉拷位锟斤拷停止锟斤拷锟斤拷
				guanbi = false;
				EEPROM.write(403, 0); //写锟斤拷eeprom
				//edp_upload_int("锟斤拷锟斤拷", 0);
				edp_upload_string("命令结果", "命令值有效，已经切换");
				edp_upload_string("工作状态", "运行");
			}
			break;
		default:
			edp_upload_string("命令结果", "命令值无效");
			EEPROM.commit();

			break;
		}

		break;
		/*-------------------------------------------锟借定锟斤拷水时浓水------------------------------------------*/
	case 2:								   //锟斤拷水时浓水  02{V}
		value = int(buffer[46] - 48) * 10; //Serial.println(value);
		value = value + (int(buffer[47]) - 48);

		if (10 < value < 30)
		{
			//nongshui = value;
			// EEPROM.write(400, nongshui); //写锟斤拷eeprom
			Serial.println("锟斤拷水时浓水锟借定锟缴癸拷");
			edp_upload_string("锟斤拷锟斤拷锟斤拷", "锟斤拷锟斤拷值锟斤拷效锟斤拷锟斤拷水时浓水锟斤拷小锟借定锟缴癸拷");

			// f_zhuang_tai("锟斤拷锟斤拷值锟斤拷效锟斤拷锟斤拷水时浓水锟斤拷小锟借定锟缴癸拷");
			// upload_alert_standard(); //锟较憋拷锟斤拷锟斤拷锟斤拷准
		}
		EEPROM.commit();
		break;
		/*-------------------------------------------锟借定洗膜时浓水------------------------------------------*/

	case 3: //洗膜浓水 03{V}

		if ((buffer[1] == 45))
		{
			value = int(buffer[46]) - 48;
		}
		if ((buffer[1] == 46))
		{
			value = int(buffer[46] - 48) * 10; //Serial.println(value);
			value = value + (int(buffer[47]) - 48);
		}
		//ximo_sudu = value;
		//EEPROM.write(402, ximo_sudu); //写锟斤拷eeprom
		Serial.println("洗膜时浓水锟借定锟缴癸拷");
		edp_upload_string("锟斤拷锟斤拷锟斤拷", "锟斤拷锟斤拷值锟斤拷效锟斤拷洗膜时浓水锟斤拷小锟借定锟缴癸拷");
		//upload_alert_standard(); //锟较憋拷锟斤拷锟斤拷锟斤拷准

		// f_zhuang_tai("锟斤拷锟斤拷值锟斤拷效锟斤拷洗膜时浓水锟斤拷小锟借定锟缴癸拷");
		EEPROM.commit();
		break;
		/*-------------------------------------------压锟斤拷桶失效时锟斤拷锟借定------------------------------------------------*/
	case 4: //04{V}
		if ((buffer[1] == 45))
		{
			value = int(buffer[46]) - 48;
		}
		// yalitong_shuiman_fenzhong = value;
		// EEPROM.write(401, yalitong_shuiman_fenzhong); //写锟斤拷eeprom

		Serial.println("压锟斤拷桶失效时水锟斤拷时锟斤拷锟借定锟缴癸拷");
		edp_upload_string("锟斤拷锟斤拷锟斤拷", "锟斤拷锟斤拷值锟斤拷效锟斤拷压锟斤拷桶失效时水锟斤拷时锟斤拷锟借定锟缴癸拷");
		// edp_upload_int("压锟斤拷桶失效锟斤拷锟绞憋拷锟??", yalitong_shuiman_fenzhong);
		// upload_alert_standard(); //锟较憋拷锟斤拷锟斤拷锟斤拷准

		// f_zhuang_tai("锟斤拷锟斤拷值锟斤拷效锟斤拷压锟斤拷桶失效时水锟斤拷时锟斤拷锟借定锟缴癸拷");
		EEPROM.commit();
		break;
		/*-------------------------------------------锟斤拷锟斤拷锟斤拷锟??-------------------------*/
	case 5: //0599
		if ((buffer[1] == 46))
		{
			value = int(buffer[46] - 48) * 10; //Serial.println(value);
			value = value + (int(buffer[47]) - 48);
		}
		if (value == 99)

		{
			chxu_update = true;
			Serial.println("锟秸碉拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟??锟狡伙拷锟斤拷停锟斤拷状态锟铰革拷锟斤拷");
			edp_upload_string("锟斤拷锟斤拷锟斤拷", "锟秸碉拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟??锟狡伙拷锟斤拷停锟斤拷状态锟铰革拷锟斤拷");
		}

		/*-------------------------------------------缺省锟斤拷锟斤拷------------------------------------------*/

	default:
		//edp_upload_string("锟斤拷锟斤拷锟斤拷", "锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷效");
		break;
	}
}

void Serial2_command_parse() //????????????
{							 /*------------------------------????????????-------------------------------*/
	if (buffer[0] == 0x0)
	{
		Serial.print(order_sended);
		Serial.println(": 0x00");
	}
	if (buffer[0] == 0x02)
	{
		Serial.print(order_sended);
		Serial.println(": 0x02");
	}
	if (buffer[0] == 0x03)
	{
		Serial.print(order_sended);
		Serial.println(": 0x03");
	}
	if (buffer[0] == 0x04)
	{
		Serial.print(order_sended);
		Serial.println(": 0x04");
	}
	if (buffer[0] == 0x05)
	{
		Serial.print(order_sended);
		Serial.println(": 0x05");
	}
	if (buffer[0] == 0x11)
	{
		Serial.print(order_sended);
		Serial.println(": 0x11");
	}
	if (buffer[0] == 0x12)
	{
		Serial.print(order_sended);
		Serial.println(": 0x12");
	}
	//1A?????????????????锟斤拷,?????????锟斤拷????????
	if (buffer[0] == 0x1A)
	{
		Serial.print(order_sended);
		Serial.println(": 0x1A");
	}
	if (buffer[0] == 0x1B)
	{
		Serial.print(order_sended);
		Serial.println(": 0X1B");
	}
	if (buffer[0] == 0x1C)
	{
		Serial.print(order_sended);
		Serial.println(": 0X1C");
	}
	if (buffer[0] == 0x1D)
	{
		Serial.print(order_sended);
		Serial.println(": 0X1D");
	}
	if (buffer[0] == 0x1E)
	{
		Serial.print(order_sended);
		Serial.println(": 0X1E");
	}
	if (buffer[0] == 0x1F)
	{
		Serial.print(order_sended);
		Serial.println(": 0X1F");
	}
	if (buffer[0] == 0x23)
	{
		Serial.print(order_sended);
		Serial.println(": 0X23");
	}
	if (buffer[0] == 0x24)
	{
		Serial.print(order_sended);
		Serial.println(": 0X24");
	}

	/*------------------------------得出页面号-------------------------------*/
	if (buffer[0] == 0x66) //
	{
		page = buffer[1]; //
		tiaoshi("???" + (String)page);

		Serial.print("page:");
		Serial.println(page);
		if (pre_page != page)
		{
			set_once = true; //因为页号不同，允许传送数据

			pre_page = page;
		}
	}
/*---------------------------在0号页，到2号设置页面:-------------------------------*/
	if (page == 0)
	{
		if (buffer[0] == 0x90)
		{ xsp_shezhi=true;
			Serial2.print("page 2"); //到设置页
			for (int i = 0; i < 3;)
			{
				Serial2.write(0xff);
				i++;
			}     

		}
	}
/*----------------------------在2号页-到0号设置页面:-------------------------------*/
if (page == 2)
	{
		if (buffer[0] == 0x98)
		{
			xsp_shezhi=false;
			xianshiping_sendorder2("zhuangtai","串口屏参数设置完成");
			edp_upload_string(hz[3],hz[25]);
			Serial2.print("page 0"); //到首页
			for (int i = 0; i < 3;)
			{
				Serial2.write(0xff);
				i++;
			}
		}
	}


	/*-----------------------------3号超滤设置页面:-------------------------------*/
	if (page == 3)
	{ if (buffer[0] == 0x90)
		{
			chaolv_chongxi_maichong_dixian = buffer[1];
			EEPROM.writeByte(0, chaolv_chongxi_maichong_dixian); //0
			eeprom_write = true;
		}

		if (buffer[0] == 0x91)
		{
			loushui_maich_biaozhun = buffer[1];
			EEPROM.writeByte(2, loushui_maich_biaozhun); //
			eeprom_write = true;
		}

		if (buffer[0] == 0x92)
		{
			chxi_cishu = buffer[1];
			EEPROM.writeByte(4, chxi_cishu); //
			eeprom_write = true;
		}

		if (buffer[0] == 0x93)
		{
			leiji_biaozhun = buffer[1]; //
			EEPROM.writeByte(6, leiji_biaozhun);
			eeprom_write = true;
		}
            if (buffer[0] == 0x98)
		{Serial2.print("page 2"); //到设置页
			for (int i = 0; i < 3;)
			{
				Serial2.write(0xff);
				i++;
			}           
		}
	}
	/*------------------------------4号页面:设置制水有关-----------------------------*/
	if (page == 4)
	{
		if (buffer[0] == 0x90)
		{
			zhishuishijian_set = buffer[1];			  //
			EEPROM.writeByte(50, zhishuishijian_set); //50

			tiaoshi("??????????:" + (String)zhishuishijian_set);
			eeprom_write = true;
		}

		if (buffer[0] == 0x91)
		{
			zhishui_maichong_biaozhun = buffer[1];
			EEPROM.writeByte(52, zhishui_maichong_biaozhun); //52???
			eeprom_write = true;
		}

		if (buffer[0] == 0x92)
		{
			chaoshi_cishu = buffer[1];
			EEPROM.writeByte(54, chaoshi_cishu); //????54???
			eeprom_write = true;
		}
		if (buffer[0] == 0x93)
		{
			shuimandengdaishijian_set = buffer[1]; //??43???
			EEPROM.writeByte(56, shuimandengdaishijian_set);
			eeprom_write = true;
		}
		if (buffer[0] == 0x98)
		{Serial2.print("page 2"); //到设置页
			for (int i = 0; i < 3;)
			{
				Serial2.write(0xff);
				i++;
			}
		}
	}
	/*-----------------------------5号页面:洗膜设置------------------------------*/
	if (page == 5)
	{
		if (buffer[0] == 0x90) //
		{
			jingshuiximo_shichang = buffer[1];
			EEPROM.writeByte(100, jingshuiximo_shichang); //
			eeprom_write = true;
		}

		if (buffer[0] == 0x91) //
		{
			ximo_shuiliu_jiance_cishu = buffer[1];
			EEPROM.writeByte(102, ximo_shuiliu_jiance_cishu); //
			eeprom_write = true;
		}
		if (buffer[0] == 0x92) //
		{
			moci_ximo_maichong_biaozhun = buffer[1];
			EEPROM.writeByte(104, moci_ximo_maichong_biaozhun); //????51???
			eeprom_write = true;
		}
		if (buffer[0] == 0x98)
		{Serial2.print("page 2"); //到设置页
			for (int i = 0; i < 3;)
			{
				Serial2.write(0xff);
				i++;
			}
		}
	}
	/*------------------------------13?????:wifi????-------------------------------*/

	/*------------------------------7号亮度页面处理--------------------------------------*/
	if (page == 7)
	{
		if (buffer[0] == 0x72)
		{
			//Serial.println("huo qu liang du");
			brightness = buffer[1];
			// p.putChar("brightness", brightness);
		}
		if (buffer[0] == 0x98)
		{Serial2.print("page 2"); //到设置页
			for (int i = 0; i < 3;)
			{
				Serial2.write(0xff);
				i++;
			}
		}
	}
	/*-----------------------------9号页面:温度计序号----------------------------*/
	if (eeprom_write == true)
	{
		tiaoshi("?锟斤拷???");
		if (EEPROM.commit())
		{
			tiaoshi("???锟斤拷??");
			eeprom_write = false;
		}
		else
		{
			tiaoshi("锟斤拷?????");
		}
		if (buffer[0] == 0x98)

		{Serial2.print("page 2"); //到设置页
			for (int i = 0; i < 3;)
			{
				Serial2.write(0xff);
				i++;
			}
		}
	}
}
void send_order() //发送命令，回传显示屏设置项的已设值
{
	/*-----------------------------3号页面:超滤设置---------------------------------*/
	if (page == 3)
	{

		if (set_once == true)
		{

			xianshiping_sendorder1("n0", chaolv_chongxi_maichong_dixian);
			xianshiping_sendorder1("n1", loushui_maich_biaozhun);
			xianshiping_sendorder1("n2", chxi_cishu);
			xianshiping_sendorder1("n3", leiji_biaozhun);
			set_once = false;
		}
	}
	/*----------------------------4号页面:制水设置-----------------------------*/
	if (page == 4)
	{
		if (set_once == true)
		{
			xianshiping_sendorder1("n0", zhishuishijian_set);
			xianshiping_sendorder1("n1", zhishui_maichong_biaozhun);
			xianshiping_sendorder1("n2", chaoshi_cishu);
			xianshiping_sendorder1("n3", shuimandengdaishijian_set);

			set_once = false;
		}
	}
	/*------------------------------5号洗膜设置---------------------------------*/
	if (page == 5)
	{
		if (set_once == true)
		{
			xianshiping_sendorder1("n0", jingshuiximo_shichang);
			xianshiping_sendorder1("n1", ximo_shuiliu_jiance_cishu);
			xianshiping_sendorder1("n2", moci_ximo_maichong_biaozhun);
			// xianshiping_sendorder1("n3", dcf_chxi_shichang);
			set_once = false;
		}
	}
	/*-------------------------------11号亮度页面处理----------------------------------*/
	if (page == 7)
	{
		if (set_once == true)
		{

			xianshiping_sendorder1("n0", brightness);
			set_once = false;
		}
	}
}
void serial_print(byte *rcv, int len)
{
	int i;
	Serial.print("jie shou:");
	Serial.println(len, DEC);
	for (i = 0; i < len; i++)
	{
		Serial.print(rcv[i], 16);
		Serial.print(" ");
	}
	Serial.println("");
}
void chaolvchongxi()
{

	xianshiping_sendorder2("zhuangtai", "正在冲洗超滤"); //?????????? ???????????????

	for (int i = 0; i < chxi_cishu; i++) //????趨??
	{    
		chaolvchongxi_zongcishu = chaolvchongxi_zongcishu + 1;
		//String s = itoa(chaolvchongxi_zongcishu, str, 10);
		EEPROM.writeULong(8, chaolvchongxi_zongcishu);  //?????????
		edp_upload_int(hz[0], chaolvchongxi_zongcishu); //超滤冲洗次数
		if (EEPROM.commit())
		{
			tiaoshi("成功写入");
		}
		else
		{
			tiaoshi("写入失败");
		}

		xianshiping_sendorder2("shuju", "超滤冲洗次数：" + (String)chaolvchongxi_zongcishu);
		delay(2000);
		tiaoshi("chongxi chlv");
		digitalWrite(zongjin,LOW);
		digitalWrite(chaolv, HIGH); //????????

		Serial.println(chaolvchongxi_zongcishu, DEC);

		detect(3000); //?3??
		delay(2000);
		digitalWrite(zongjin,HIGH);         

		xianshiping_sendorder2("shuju", "超滤冲洗脉冲数：" + (String)count);
		edp_upload_int(hz[1], count); //超滤冲洗脉冲数
		delay(2000);
		digitalWrite(chaolv, LOW);
		//delay(8000); //??????
	}

	chaolv_chxi = false; //????????????
	/*detect(5000);		 //?5??
	if (count > 30)		 //????????????锟斤拷???????????
	{
		xianshiping_sendorder2("zhuangtai", "超滤冲洗电磁阀漏水");
		delay(1000);
	}
	else
	{
		xianshiping_sendorder2("zhuangtai", "超滤冲洗电磁阀不漏水");
		delay(1000);
	}*/
}
void eeprom_read()
{
	if (!EEPROM.begin(200))
	{
		Serial.println("failed to initialise EEPROM");
		delay(1000000);
	}

	EEPROM.writeULong(60, 1); //?????????????

	chaolv_chongxi_maichong_dixian = EEPROM.readByte(0); //超滤冲洗脉冲底限
	loushui_maich_biaozhun = EEPROM.readByte(2);		 //超滤漏水脉冲标准
	chxi_cishu = EEPROM.readByte(4);					 //单回超滤冲洗次数
	leiji_biaozhun = EEPROM.readByte(6);				 //制水累计多长时间冲洗一次超滤
	chaolvchongxi_zongcishu = EEPROM.readULong(8);		 //总次数
	// tiaoshi("?????????" + (String)chaolvchongxi_zongcishu);

	zhishuishijian_set = EEPROM.readByte(50); //单次制水限时,50
	tiaoshi("制水限时：" + (String)zhishuishijian_set);
	zhishui_maichong_biaozhun = EEPROM.readByte(52); //制水时最小脉冲数,52
													 // tiaoshi("???????????" + (String)zhishui_maichong_biaozhun);
	chaoshi_cishu = EEPROM.readByte(54);			 //制水时允许的超时次数
	shuimandengdaishijian_set = EEPROM.readByte(56); //净水电磁阀关闭后的水满等待时间 56
	zhishuizongshijian = EEPROM.readULong(60);		 //制水总时间   从60地址开始存放制水总时间,占4个字节
	tiaoshi("?????????" + (String)zhishuizongshijian);

	jingshuiximo_shichang = EEPROM.readByte(100);		//净水洗膜时长
	ximo_shuiliu_jiance_cishu = EEPROM.readByte(102);   //洗膜水流检测次数 102
	moci_ximo_maichong_biaozhun = EEPROM.readByte(104); //洗膜末次脉冲标准，低于此值认为气囊失效 104
	guanbi = EEPROM.readBool(106);
}
void setup()
{  {
		pinMode(diyakg, INPUT_PULLUP);
		pinMode(ximo_gaoyakg, INPUT_PULLUP);
		pinMode(yinyong_gaoyakg, INPUT_PULLUP);
		pinMode(shengchan_gaoyakg, INPUT_PULLUP);
		pinMode(jingshui_chaoyakg, INPUT_PULLUP);
		pinMode(shuiliu_chuanganqi, INPUT_PULLUP);

		pinMode(chaolv, OUTPUT);
		pinMode(jingshui, OUTPUT);
		pinMode(gaoyabeng, OUTPUT);
		pinMode(youxian, OUTPUT);
		pinMode(zongjin, OUTPUT);
		pinMode(jiare, OUTPUT);
	}
	digitalWrite(zongjin,HIGH);//为了先打开进水+-
	Serial.begin(9600); //?????????

	Serial1.begin(9600); //?????????
	Serial2.begin(9600);

	/*----------------------------------WiFi????--------------------------------------*/
	WiFi.mode(WIFI_AP_STA);
	// Connect to WiFi network
	WiFi.begin(wifi_ssid.c_str(), wifi_pass.c_str());

	Serial.println("");

	// Wait for connection
	if (WiFi.status() != WL_CONNECTED)
	{
		for (int i = 0; i < 20;)
		{
			delay(500);
			Serial.print(".");
			i++;
		}
	}
	if (WiFi.status() == WL_CONNECTED)
	{
		Serial.println("");
		Serial.print("Connected to ");
		Serial.println(wifi_ssid);
		Serial.print("IP address: ");
		Serial.println(WiFi.localIP());

		former_wifi_ssid = wifi_ssid; //????????
		former_wifi_pass = wifi_pass; //????????
		wifi_disconnect_count = 0;
		edp_first_connect(); //edp第一次连接
	}

	/*----------------------------------OTA--------------------------------------*/

	/*----------------------------------?????????--------------------------------------*/
	
	closeall();
	digitalWrite(zongjin,HIGH);//为了先打开进水，总进不能关闭
	/*------------------------------EEPROM ????????-------------------------------*/
	eeprom_read();
	// brightness = p.getChar("brightness", 20); //??????????
	/*-------------------------????------------------------------*/
	sensors.begin();
	if (!sensors.getAddress(address_18b20, 0))
		Serial.println("Unable to find address for Device 0");

	chaolv_chxi = true; //?????????锟斤拷???

	Serial2.print("page 0"); //到首页
	for (int i = 0; i < 3;)
	{
		Serial2.write(0xff);
		i++;
	}

	ArduinoOTA
		.onStart([]() {
			String type;
			if (ArduinoOTA.getCommand() == U_FLASH)
				type = "sketch";
			else // U_SPIFFS
				type = "filesystem";

			// NOTE: if updating SPIFFS this would be the place to unmount SPIFFS using SPIFFS.end()
			Serial.println("Start updating " + type);
		})
		.onEnd([]() {
			Serial.println("\nEnd");
		})
		.onProgress([](unsigned int progress, unsigned int total) {
			Serial.printf("Progress: %u%%\r", (progress / (total / 100)));
		})
		.onError([](ota_error_t error) {
			Serial.printf("Error[%u]: ", error);
			if (error == OTA_AUTH_ERROR)
				Serial.println("Auth Failed");
			else if (error == OTA_BEGIN_ERROR)
				Serial.println("Begin Failed");
			else if (error == OTA_CONNECT_ERROR)
				Serial.println("Connect Failed");
			else if (error == OTA_RECEIVE_ERROR)
				Serial.println("Receive Failed");
			else if (error == OTA_END_ERROR)
				Serial.println("End Failed");
		});

	ArduinoOTA.begin();
}

void loop()
{
	ArduinoOTA.handle();

	/*--------------------------------意外保护--------------------------------------------*/
	{
		if (digitalRead(jingshui_chaoyakg) == 1) //锟斤拷水锟斤拷压锟斤拷锟斤拷
		{
			if (jingshui_chaoya_begin == 0)
			{
				xianshiping_sendorder2("zhuangtai", "净水超压停机，报售后");
				tiaoshi("净水超压，报售后");
				if (millis() > alarm_jiange + 180000)
				{
					edp_upload_string(hz[21], hz[22]); //报警 净水超压停机，报售后
					alarm_jiange = millis();

					//	edp_upload_string("报警","净水超压");
				}

				closeall();
			}
			if (millis() > (jingshui_chaoya_begin + 8000))
			{
				jingshui_chaoya_begin = 0;
			}

			return;
		}

		if (feishuiguoshao == true) //废水过少故障停机
		{
			unsigned long dengdai;

			if (tiaoshikg == true)
			{
				dengdai = 60000;
			}
			else
			{
				dengdai = 1800000;
			}

			if (begintime_baohu == 0)
			{
				edp_upload_string("报警", "废水过少");
				begintime_baohu = millis();
				if (millis() > alarm_jiange + 180000)
				{
					alarm_jiange = millis();
					tiaoshi("废水过少故障停机,30分钟后试运行");
					edp_upload_string(hz[21], hz[23]); //废水过少故障停机,30分钟后试运行
					xianshiping_sendorder2("zhuangtai", "废水过少故障等待");
					xianshiping_sendorder2("shuju", "废水过少故障停机,30分钟后试运行");
				}

				closeall();
				digitalWrite(jingshui, HIGH); //保持净水关闭，可能可以洗膜
			}
			endtime_baohu = millis();
			if (endtime_baohu - begintime_baohu > dengdai)
			{

				xianshiping_sendorder2("zhuangtai", "保护停机30分钟后试运行");
				tiaoshi("30分钟后试运行");

				feishuiguoshao_times = 0; //??锟斤拷
				begintime_baohu = 0;
				endtime_baohu = 0;
				feishuiguoshao = false;
				digitalWrite(jingshui, LOW);
			}

			return;

			//if(zhishui_starttime==0){ tiaoshi("zhishui=0") ;  }
		}

		if (alarm1 == true) //??????????
		{
			if (millis() > alarm_jiange + 180000)
			{
				alarm_jiange = millis();
				edp_upload_string(hz[21], hz[24]); //报警 净水电磁阀关闭后不能水满
				xianshiping_sendorder2("shuju", "联系售后：17737203569 梁，开启紧急供水阀门");
				//xianshiping_sendorder2("guzh_tishi", "?????????7??????????????????????");
				tiaoshi("净水关闭输出7分钟后不能水满停机，报警停机");
				closeall();
			}

			return;
		}
	}

	/*-------------------?????????????---------------------------------*/
	while (Serial2.available() > 0 && parse_ready==false) //串口显示屏
	{
		buffer[buffer_index] = Serial2.read();
		/* if(buffer_index==0)     为了避免第一个字节是0xff，但很容易死机，不知为什么。2018.11.26晚
		  while (buffer[0] == 0xff)
			{
			buffer[0] == Serial2.read();
			}
		}*/

		if (buffer[buffer_index] == 0xff) //三个0xff结尾
		{

			buffer[buffer_index + 1] = Serial2.read(); //读第二个结束符
			if (buffer[buffer_index + 1] == 0xff)
			{
				buffer[buffer_index + 2] = Serial2.read(); //读第三个结束符
				{
					Serial.print("接收一次完整数据");
					serial_print(buffer, buffer_index + 3);
					//serial_print(buffer, buffer_index + 1);
					buffer_index = 0;		 //????????
					parse_ready=true; //需要解析
					
					return;		 //没有接收到指示错误的命令后，查询需要发布显示屏的命令
											 //提高串口处理速度，直接返回，效果很好
				}
			}
		}

		buffer_index++;
	}

	if(parse_ready==true)
	{Serial2_command_parse(); //获取页号和数据
	  parse_ready=false;
	send_order();	//给串口屏回传数据

	}

	if (xsp_shezhi == true) //显示屏处理完数据再制水, //提高串口处理速度，直接返回
	{
		closeall();
		tiaoshi("显示屏设置运行参数，暂时停机");
		//xianshiping_sendorder2("zhuangtai","显示屏设置运行参数，暂时停机");
		edp_upload_string(hz[3],hz[26]);// 状态 显示屏设置运行参数，暂时停机
		return;
	}
	//没有wifi，没有连接服务器，不用进入
	if (WiFi.status() == WL_CONNECTED && edp_client.connected() == true)
	{	/*------------------------------------edp接收命令------------------------------------------------*/
		while (edp_client.available())
		{

			int byte_count = edp_client.available();
			if (byte_count > 0) //??????
			{

				for (int e = 0; e < byte_count; e++)
				{
					edp_buffer[e] = edp_client.read();
				}
				rcvDebug(edp_buffer, byte_count);
				edp_command_parse();
				//memset(buffer, 0, 200);
			}
		}		
	}
	/*------------------------------------定时心跳和wifi检查------------------------------------------*/
		//heart_beat_netcheck();//???????????????
if (millis() > xintiao_jiange)
		{	edp_heartbeat(); //可以确定edp是否连接状态
			tiaoshi("检查WiFi");
			if (edpConnected == false) //停锟斤拷状态锟铰斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷状态锟斤拷椋琫dp锟斤拷锟斤拷状态锟酵诧拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷
			{
				check_wifi();
			}
			xintiao_jiange = millis() + 200000; //???4???????????.??????????
		}

	/*---------------------制水时间计算---------------------------------*/
	if (zhishui_starttime == 0 && digitalRead(gaoyabeng) == 1) //给开始时间赋值一次
	{
		zhishui_starttime = millis(); //
		zhishui_endtime = 0;
	}
	if (zhishui_endtime == 0 && digitalRead(gaoyabeng) == 0)
	{
		zhishui_endtime = millis(); //??????????
		tiaoshi((String)((int)((zhishui_endtime - zhishui_starttime) / 60000)));
		zhishuizongshijian = zhishuizongshijian + (int)((zhishui_endtime - zhishui_starttime) / 60000); //????
		//EEPROM.writeULong(60, 0);
		EEPROM.writeULong(60, zhishuizongshijian);									 //60???
		edp_upload_int("制水总时长", zhishuizongshijian);							 //制水总时长
		edp_upload_int(hz[8], (int)((zhishui_endtime - zhishui_starttime) / 60000)); //单次制水时长	                                                                                         // p.putLong("zhishuizongshijian", zhishuizongshijian);                                            //锟斤拷???????????????锟斤拷
		decide_chaolv_chxi(zhishui_endtime - zhishui_starttime);
		zhishui_starttime = 0; //制水开始时间复位
	}

	if (digitalRead(gaoyabeng) == 0) //高压泵不运转时
	{
		state = "ting_ji";
	}

	if (guanbi == false) //允许运行
	{
		if (digitalRead(diyakg) == 0 && digitalRead(jingshui_chaoyakg == 0))
		{
			/*--------------------超滤冲洗--------------------------------*/
			if (digitalRead(gaoyabeng) == 0) //锟斤拷证锟斤拷停止锟斤拷洗锟斤拷锟斤拷
			{
				if (chaolv_chxi == true) /*第一次启动冲洗或累积时间超过1小时冲洗*/
				{
					xianshiping_sendorder2("zhuangtai", "制水累计超过设定时间冲洗一次");
					edp_upload_string(hz[3], hz[7]);
					tiaoshi("冲洗超滤");
					chaolvchongxi();
				}
			}
			/*--------------------------------锟斤拷锟矫撅拷水锟斤拷水锟叫★拷锟斤拷锟斤拷------------------------------------------*/
			if (digitalRead(yinyong_gaoyakg) == 0  && shchan_zhishui==false) /*保证生产制水停止*/
			{
				if (xuyao_ximo == true)
				{
					xianshiping_sendorder2("zhuangtai", "饮用净水需要制水"); //洗膜时可以提示
				}
				if (xuyao_ximo == false)
				{
					if (digitalRead(gaoyabeng) == 0) //只进入一次
					{
						xianshiping_sendorder2("zhuangtai", "开始饮用净水制水"); //??????

						tiaoshi("开始饮用净水制水");
						digitalWrite(zongjin, HIGH); //总进水打开
						digitalWrite(youxian, HIGH);
						digitalWrite(gaoyabeng, HIGH); /*??????*/
						digitalWrite(jingshui, HIGH);  //净水电磁阀关闭
						begintime = millis();		   //高压泵工作开始时间
						yinyong_zhishui = true;
						shchan_zhishui = false;
					}

					/*------------------洗膜水提前储存------------------------------------*/
					if (digitalRead(gaoyabeng) == 1 && digitalRead(jingshui) == 1) /*制水中,,净水电磁阀关闭*/
					{
						xianshiping_sendorder2("zhuangtai", "净水电磁阀关闭，等待洗膜压力桶水满");
						edp_upload_string(hz[3], hz[16]);   //净水电磁阀关闭，等待洗膜压力桶水满
						if (digitalRead(ximo_gaoyakg) == 0) //洗膜高压开关没有断开
						{
							if (millis() > begintime + shuimandengdaishijian_set * 60000) //超过设定的分钟数，变成毫秒
							{
								//7????????锟斤拷????????????

								xianshiping_sendorder2("zhuangtai", "净水输出关闭" + (String)shuimandengdaishijian_set + "分钟后任然不能水满，故障停机"); //?????????7????????????????????????
								tiaoshi("净水输出关闭" + (String)shuimandengdaishijian_set + "分钟后任然不能水满，故障停机");

								delay(2000);
								alarm1 = true; //报警为真
								//closeall();    //关闭所有设备。
								return;
							}
						}
						if (digitalRead(ximo_gaoyakg) == 1) //洗膜高压开关断开
						{
							digitalWrite(jingshui, LOW); //净水电磁阀失电打开
							xianshiping_sendorder2("shuju", "洗膜压力桶" + String((millis() - begintime) / 60000) + "分钟水满");
							edp_upload_string(hz[3], hz[17]); //洗膜高压开关断开
						}
					}

					/*-------------------------正常饮用水制水-----------------------------------*/

					if (digitalRead(gaoyabeng) == 1 && digitalRead(jingshui) == 0) /*?????,,????????????锟斤拷???*/
					{
						xianshiping_sendorder2("zhuangtai", "饮用净水制水中");
						edp_upload_string(hz[3], hz[9]);
						xianshiping_sendorder2("shuju", "制水时水流脉冲最小值：" + (String)zhishui_maichong_biaozhun);
						xianshiping_sendorder2("zhuangtai", "制水单次设定：" + (String)zhishuishijian_set + "分钟");
						xianshiping_sendorder2("zhuangtai", "制水总分钟：" + (String)zhishuizongshijian);
						tiaoshi("制水脉冲标准：" + (String)zhishui_maichong_biaozhun);

						//if (millis() < (begintime + (zhishuishijian_set * 60000))) //制水时间不超过设定时间
						if (millis() < (begintime + (50 * 60000))) //制水时间不超过设定时间
						{
							detect(3000); //???????????????????

							xianshiping_sendorder2("shuju", "制水时脉冲数：" + (String)count);
							edp_upload_int(hz[10], count); //废水脉冲数
							xianshiping_sendorder2("zhuangtai", "饮用净水制水已用时：" + (String)((millis() - begintime) / 60000) + "分钟");

							if (count < zhishui_maichong_biaozhun)
							{
								feishuiguoshao_times++;
								String tt = itoa(feishuiguoshao_times, str, 10);

								xianshiping_sendorder2("zhuangtai", "废水过少:" + tt + "次");
							}
							else
							{
								xianshiping_sendorder2("zhuangtai", "废水流量正常");

								feishuiguoshao_times = 0;
							}
							if (feishuiguoshao_times >= 8)
							{
								xianshiping_sendorder2("zhuangtai", "废水过少布尔值为真");
								//xianshiping_sendorder2(0,"zhuangtai", "????");

								feishuiguoshao = true;
								return;
							}
						}
						else //制水时间超过设定，只进入1次
						{
							edp_upload_string(hz[3], hz[15]);

							xianshiping_sendorder2("zhuangtai", "制水时间超过单次设定时间");
							tiaoshi("制水时间超过单次设定时间");
							xuyao_ximo = true;
							digitalWrite(gaoyabeng, LOW); //??????锟斤拷?????
							digitalWrite(zongjin, LOW);   //???????

							chaolv_chxi = true; //需要冲洗超滤
							chaoshi_cishu++;

							xianshiping_sendorder2("shuju", "制水超时次数：" + (String)chaoshi_cishu); //??????????
						}
					}
				}
			}

			if (digitalRead(yinyong_gaoyakg) == 1) /*???????*/
			{
				edp_upload_string(hz[3], hz[12]);					 //饮用净水水满
				xianshiping_sendorder2("zhuangtai", "饮用净水水满"); //饮用净水水满
				tiaoshi("饮用净水水满");
				if (yinyong_zhishui == true) //???????
				{
					digitalWrite(zongjin, LOW); //???????
					digitalWrite(gaoyabeng, LOW);
					digitalWrite(youxian, LOW); //??????????
					yinyong_zhishui = false;
				}
			}
			/*----------------------------------------------生产用净水制水----------------------------------------*/
			if (digitalRead(shengchan_gaoyakg) == 0) /*???????????????????????????*/
			{
				if (shchan_zhishui == false)
				{
					xianshiping_sendorder2("zhuangtai", "生产用净水需要制水"); //
				}
				if (digitalRead(yinyong_gaoyakg) == 0) //???????????????????????????????????????????????
				{
					if (shchan_zhishui == true)
					{
						digitalWrite(zongjin, LOW); //???????
						digitalWrite(gaoyabeng, LOW);
						xianshiping_sendorder2("zhuang", "饮用净水不满，停止生产用净水制水");
						shchan_zhishui = false;
					}
				}
				if (xuyao_ximo == false && digitalRead(yinyong_gaoyakg) == 1) //
				{
					if (digitalRead(gaoyabeng) == 0) //???????
					{
						xianshiping_sendorder2("zhuangtai", "生产用净水开始制水"); //??????,???????

						tiaoshi("生产用净水制水开始制水");
						digitalWrite(zongjin, HIGH);   /*锟斤拷锟杰斤拷水*/
						digitalWrite(gaoyabeng, HIGH); /*??????*/
						digitalWrite(jingshui, HIGH);  //关闭净水电磁阀
						shchan_zhishui = true;
						begintime = millis(); //?????????????
					}
					/*------------------??????????-------------------------------------*/
					if (digitalRead(gaoyabeng) == 1 && digitalRead(jingshui) == 1) /*?????,,??????????*/
					{
						xianshiping_sendorder2("zhuangtai", "净水电磁阀关闭，等待洗膜压力桶水满");

						if (digitalRead(ximo_gaoyakg) == 0) //???????????锟斤拷??
						{

							if (millis() > begintime + shuimandengdaishijian_set * 60000) //?????趨???????????????
							{
								//7????????锟斤拷????????????

								xianshiping_sendorder2("zhuangtai", "净水输出关闭" + (String)shuimandengdaishijian_set + "分钟后任然不能水满，故障停机"); //?????????7????????????????????????
								tiaoshi("?????????7????????????????????????");

								alarm1 = true; //???????
								closeall();	//????????锟斤拷??

								return;
							}
						}
						if (digitalRead(ximo_gaoyakg) == 1) //洗膜锟斤拷压锟斤拷锟截断匡拷

						{
							xianshiping_sendorder2("shuju", "洗膜压力桶" + String((millis() - begintime) / 60000) + "分钟水满");
							edp_upload_string(hz[3], hz[17]); //洗膜高压开关断开
							digitalWrite(jingshui, LOW);	  //锟斤拷水锟斤拷欧锟绞э拷锟斤拷
						}
					}

					/*------------------锟斤拷锟斤拷锟矫撅拷水锟斤拷水锟斤拷-------------------------------------*/

					if (digitalRead(gaoyabeng) == 1 && digitalRead(jingshui) == 0) /*?????,???????,?????????锟斤拷?*/
					{

						xianshiping_sendorder2("zhuangtai", "生产用净水制水中");
						edp_upload_string(hz[3], hz[18]); //状态 生产用净水制水中
						xianshiping_sendorder2("shuju", "制水时水流脉冲最小值：" + (String)zhishui_maichong_biaozhun);
						xianshiping_sendorder2("zhuangtai", "制水单次设定：" + (String)zhishuishijian_set + "分钟");
						xianshiping_sendorder2("shuju", "制水总分钟：" + (String)zhishuizongshijian);
						tiaoshi("制水脉冲标准：" + (String)zhishui_maichong_biaozhun);

						// endtime = millis();

						//if (endtime - begintime < zhishuishijian_set) //??????????1锟斤拷?????

						if (millis() < (begintime + (zhishuishijian_set * 60000))) //???????????趨???

						{
							detect(3000); //???????????????????
							xianshiping_sendorder2("shuju", "制水时脉冲数：" + (String)count);
							edp_upload_int(hz[10], count); //废水脉冲数
							xianshiping_sendorder2("zhuangtai", "生产用制水已用时：" + (String)((millis() - begintime) / 60000) + "分钟");

							if (count < zhishui_maichong_biaozhun)
							{
								feishuiguoshao_times++;
								String tt = itoa(feishuiguoshao_times, str, 10);

								xianshiping_sendorder2("zhuangtai", "废水过少:" + tt + "次");
							}
							else
							{
								xianshiping_sendorder2("zhuangtai", "废水流量正常");
								feishuiguoshao_times = 0;
							}
							if (tiaoshikg == false)
							{
								if (feishuiguoshao_times >= 8)
								{
									xianshiping_sendorder2("zhuangtai", "废水过少布尔值为真");
									feishuiguoshao = true;
									return;
								}
							}
						}
						else //????????1锟斤拷??????????1??
						{
							xuyao_ximo = true;
							digitalWrite(gaoyabeng, LOW);	 //??????锟斤拷???
							digitalWrite(zongjin, LOW);		  //??????锟斤拷???
							edp_upload_string(hz[3], hz[11]); //状态 生产用净水制水超时
							xianshiping_sendorder2("zhuangtai", "制水时间超过单次设定时间");
							edp_upload_string(hz[3], hz[14]);
							tiaoshi("制水时间超过单次设定时间");

							// digitalWrite(jingshui, HIGH); /*????????????,?????????????*/
							chaolv_chxi = true; //??????????
							chaoshi_cishu++;

							xianshiping_sendorder2("shuju", "制水超时次数：" + (String)chaoshi_cishu); //??????????
						}
					}
				}
			}

			if (digitalRead(shengchan_gaoyakg) == 1)
			{
				edp_upload_string(hz[3], hz[13]);					   //生产用净水水满
				xianshiping_sendorder2("zhuangtai", "生产用净水水满"); //
				tiaoshi("生产用净水水满");
				if (shchan_zhishui == true) //???????
				{
					digitalWrite(zongjin, LOW);
					digitalWrite(gaoyabeng, LOW);
					shchan_zhishui = false;
				}
			}
			/*??????????????????????????,??????*/
			if (xuyao_ximo == true)
			{
				if (ximo_begin == 0)
				{
					ximo_begin = millis();
					digitalWrite(gaoyabeng, LOW);
					digitalWrite(zongjin, LOW);
				}

				xianshiping_sendorder2("zhuangtai", "强制停机洗膜");
				edp_upload_string(hz[3], hz[19]);																		  //强制停机洗膜
				xianshiping_sendorder2("zhuangtai", "洗膜设定时长：" + (String)(jingshuiximo_shichang) + "分钟"); //???趨???????
				delay(1000);
				if (millis() < ximo_begin + jingshuiximo_shichang * 60000) //??? ,????????,??????
				{
					//tiaoshi("?????????" + (String)(endtime - begintime) / 60000 + "????");
					detect(3000);

					xianshiping_sendorder2("shuju", "洗膜时水流脉冲数：" + (String)count);	
					edp_upload_int(hz[27],count);								//??????
					xianshiping_sendorder2("zhuangtai", "洗膜已用时：" + (String)((millis() -ximo_begin) / 60000) + "分钟"); //?????

					// endtime = millis();
				}
				else //??????????趨???
				{
					xianshiping_sendorder2("zhuangtai", "净水洗膜结束"); //?????????
					edp_upload_string(hz[3], hz[20]);					 //"强制净水洗膜结束"
					xuyao_ximo = false;
					ximo_begin = 0; //??锟斤拷
				}
			}
		}
		else
		{										  //缺水状态下如果没有延时会大量发送数据造成显示屏回传错误报警,间隔给显示屏数据
			if (millis() - queshui_begin > 20000) //20秒
			{
				queshui_begin = millis();
				xianshiping_sendorder2("zhuangtai", "缺水停机");
				edp_upload_string(hz[3], hz[4]); //状态 缺水停机
				queshui_begin = millis();
				tiaoshi("缺水提示一次");
				// if(Serial2.available()==0){     tiaoshi("?????");}
				closeall();
			}

			if (digitalRead(zongjin) == 0 && digitalRead(gaoyabeng) == 0) //???? ??????
			{
				xianshiping_sendorder2(hz[3], hz[5]); //状态 漏水或膜进水电磁阀关闭不严！
			}
		}
	}
	else
	{
		xianshiping_sendorder2("zhuangtai", "远程主动停机状态");
		closeall();
	}

	if (millis() - begintime_wendu > 60000)
	{
		sensors.requestTemperatures(); // Send the command to get temperatures
		tempC = sensors.getTempC(address_18b20);
		xianshiping_sendorder2("zhuangtai", "机箱内温度" + (String)tempC);
		edp_upload_int(hz[2], tempC); //温度
		if (tempC < 5)
		{
			digitalWrite(jiare, HIGH);
		}
		if (tempC > 10)
		{
			digitalWrite(jiare, LOW);
		}
	}
}
